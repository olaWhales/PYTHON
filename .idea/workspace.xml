<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c38ec0cb-0c5c-42ec-95d9-d4c004bf024c" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/PYTHON.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/PYTHON.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/practice/python_project/queue_work/queue/queue_test.py" beforeDir="false" afterPath="$PROJECT_DIR$/practice/python_project/queue_work/queue/queue_test.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/practice/python_project/queue_work/queue_practice.py" beforeDir="false" afterPath="$PROJECT_DIR$/practice/python_project/queue_work/queue_practice.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2mb88E40SkxkPt9AhTkZG95ihEF" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for Account_Test.AccountTest.executor": "Run",
    "Python tests.Python tests for Account_Test.AccountTest.test_if_account_can_deposit.executor": "Run",
    "Python tests.Python tests for TV_test.TVTest.test_if_Tv_class_exists.executor": "Run",
    "Python tests.Python tests for TV_test.TVTest.test_if_tv_can_turn_on.executor": "Run",
    "Python tests.Python tests for TV_test.TVTest.test_isOn.executor": "Run",
    "Python tests.Python tests for ac-test.TestAC.executor": "Run",
    "Python tests.Python tests for ac-test.TestAC.test_ac.executor": "Run",
    "Python tests.Python tests for ac_test.test.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_check_if_ac_can_be_turn_off.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_check_if_ac_can_be_turn_on.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_check_if_ac_is_off_at_initial_state.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_an_can_increase_in_temperature_1by1.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_an_can_increase_in_temperature_by_1.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_an_can_increase_in_temperature_by_2_at_a_time.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_an_can_increase_in_temperature_cannot_over_32.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_can_decrease_in_temperature.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_cannot_decrease_in_temperature_below_16.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_cannot_increase_in_temperature_over_30.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_if_ac_initial_status_is_16_while_on.executor": "Run",
    "Python tests.Python tests for ac_test.test.test_to_off_the_ac_while_working.executor": "Run",
    "Python tests.Python tests for ac_test.test_ac.executor": "Run",
    "Python tests.Python tests for ac_test.test_ac.test_check_if_ac_can_be_turn_off.executor": "Run",
    "Python tests.Python tests for ac_test.test_ac.test_check_if_ac_can_be_turn_on.executor": "Run",
    "Python tests.Python tests for ac_test.test_ac.test_check_if_ac_class_exists.executor": "Run",
    "Python tests.Python tests for ac_test.test_ac.test_check_if_ac_is_off_at_initial_state.executor": "Run",
    "Python tests.Python tests for bike_test.BikeTest.executor": "Run",
    "Python tests.Python tests for bike_test.BikeTest.test_bike_can_be_turned_off.executor": "Run",
    "Python tests.Python tests for bike_test.BikeTest.test_if_Ac_Can_Turn_Off.executor": "Run",
    "Python tests.Python tests for bike_test.BikeTest.test_if_bike_can_accelerate_when_moving.executor": "Run",
    "Python tests.Python tests for bike_test.BikeTest.test_if_bike_can_power_on.executor": "Run",
    "Python tests.Python tests for bike_test.BikeTest.test_if_bike_class_exist.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_accelerate.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_Can_Turn_Off.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_in_gear_1_without_exceed_20.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_when_moving.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_when_moving_with_gear_1_and_stop_at_20.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_when_moving_with_gear_2_and_stop_at_30.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_with_gear_1.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_with_gear_1_and_increasing_with_1.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_with_gear_1_without_exceed_20.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_accelerate_with_gear_2.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_can_power_on.executor": "Run",
    "Python tests.Python tests for bike_test.bikeTest.test_if_bike_class_exist.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_Can_Turn_Off.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_can_accelerate_with_gear_1.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_can_accelerate_with_gear_2.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_can_accelerate_with_gear_3.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_can_accelerate_with_gear_4.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_can_power_on.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_cannot_accelerate_over_20_with_gear_1.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_cannot_accelerate_over_40_with_gear_3.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_class_exist.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_decelerate_while_on_gear_1.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_decelerate_while_on_gear_2.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_decelerate_while_on_gear_3.executor": "Run",
    "Python tests.Python tests for bike_test.bike_test.test_if_bike_decelerate_while_on_gear_4.executor": "Run",
    "Python tests.Python tests for loan_test.TestLoan.executor": "Run",
    "Python tests.Python tests for loan_test.TestLoan.test_if_loan_class_can_get_monthly_expenditure.executor": "Run",
    "Python tests.Python tests for loan_test.TestLoan.test_if_loan_class_can_get_monthly_payment.executor": "Run",
    "Python tests.Python tests for loan_test.TestLoan.test_if_loan_class_can_get_yearly_payment_interest.executor": "Run",
    "Python tests.Python tests for loan_test.TestLoan.test_if_loan_class_exist.executor": "Run",
    "Python tests.Python tests for loantest.loanTest.executor": "Run",
    "Python tests.Python tests for loantest.loanTest.test_amount_loan_to_be_paying_in_month.executor": "Run",
    "Python tests.Python tests for loantest.loanTest.test_if_loan_class_exist.executor": "Run",
    "Python tests.Python tests for meals_test.mealtest.executor": "Run",
    "Python tests.Python tests for meals_test.mealtest.test_to_check_Adjusted_price.executor": "Run",
    "Python tests.Python tests for meals_test.mealtest.test_to_check_BasePrice.executor": "Run",
    "Python tests.Python tests for meals_test.mealtest.test_to_create_burger_class.executor": "Run",
    "Python tests.Python tests for meals_test.mealtest.testtearDown.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_check_if_stack_can_full.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_check_if_stack_can_pop_all_element_capacity.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_check_if_stack_can_pop_element.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_check_if_stack_can_pop_element_more_than_capacity.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_check_if_stack_can_push_element.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_check_if_stack_is_empty.executor": "Run",
    "Python tests.Python tests for stack_test.TestStackPractice.test_to_create_stack.executor": "Run",
    "Python tests.Python tests for swaptest.TestExercise.executor": "Run",
    "Python tests.Python tests for swaptest.TestExercise4.executor": "Run",
    "Python tests.Python tests for tv_test.TVTest.executor": "Run",
    "Python tests.Python tests for tv_test.TVTest.test_if_Tv_class_exists.executor": "Run",
    "Python tests.Python tests for tv_test.TVTest.test_if_tv_can_turn_on.executor": "Run",
    "Python tests.Python tests for tv_test.Test.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_Ac_Can_Turn_Off.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_Ac_Can_Turn_On.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_class_Tv_exist.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_can_channel_can_increase.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_can_channel_decrease.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_can_get_channel.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_can_get_volume_increase.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_can_set_channel.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_can_set_volume.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_channel_can_decrease.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_channel_can_set_up_to_100.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_volume_can_decrease.executor": "Run",
    "Python tests.Python tests for tv_test.Test.test_if_tv_volume_can_increase.executor": "Run",
    "Python tests.Python tests in bike_test.py.executor": "Run",
    "Python tests.Python tests in swaptest.py.executor": "Run",
    "Python tests.Python tests in tv_test.py.executor": "Run",
    "Python.Account_Test.executor": "Run",
    "Python.Assignment_One.executor": "Run",
    "Python.Exercise_no_8.executor": "Run",
    "Python.area_of_circumferences.executor": "Run",
    "Python.class_assessment.executor": "Run",
    "Python.divisible_by_5and6_work.executor": "Run",
    "Python.exercise3.executor": "Run",
    "Python.exercise4.executor": "Run",
    "Python.inputValidation.executor": "Run",
    "Python.loan.executor": "Run",
    "Python.meals_test.executor": "Run",
    "Python.multiplication_table_practice.executor": "Run",
    "Python.randominput.executor": "Run",
    "Python.tv.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/DELL USER/Desktop/__init__.py",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "inlay.hints",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\DELL USER\Desktop\__init__.py\practice\python_project\television\test" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for meals_test.mealtest">
    <configuration name="Python tests for meals_test.mealtest" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PYTHON" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;meals_test.mealtest&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for meals_test.mealtest.test_to_check_Adjusted_price" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PYTHON" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;meals_test.mealtest.test_to_check_Adjusted_price&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for meals_test.mealtest.test_to_check_BasePrice" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PYTHON" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;meals_test.mealtest.test_to_check_BasePrice&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for meals_test.mealtest.test_to_create_burger_class" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PYTHON" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;meals_test.mealtest.test_to_create_burger_class&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for meals_test.mealtest.testtearDown" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PYTHON" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;meals_test.mealtest.testtearDown&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for meals_test.mealtest" />
        <item itemvalue="Python tests.Python tests for meals_test.mealtest.test_to_check_Adjusted_price" />
        <item itemvalue="Python tests.Python tests for meals_test.mealtest.test_to_check_BasePrice" />
        <item itemvalue="Python tests.Python tests for meals_test.mealtest.test_to_create_burger_class" />
        <item itemvalue="Python tests.Python tests for meals_test.mealtest.testtearDown" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-PY-242.20224.347" />
        <option value="bundled-python-sdk-c2d6afa66fbe-39cff9de6eef-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.20224.347" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c38ec0cb-0c5c-42ec-95d9-d4c004bf024c" name="Changes" comment="" />
      <created>1727333754088</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1727333754088</updated>
      <workItem from="1727333755138" duration="954000" />
      <workItem from="1727336207333" duration="1269000" />
      <workItem from="1727390628719" duration="1558000" />
      <workItem from="1727392221552" duration="461000" />
      <workItem from="1727424373186" duration="1757000" />
      <workItem from="1727448975184" duration="1934000" />
      <workItem from="1727856580296" duration="22000" />
      <workItem from="1727859214432" duration="6000" />
      <workItem from="1727859375817" duration="1089000" />
      <workItem from="1727943542212" duration="2592000" />
      <workItem from="1727951041161" duration="4110000" />
      <workItem from="1727955196891" duration="766000" />
      <workItem from="1727956053263" duration="17316000" />
      <workItem from="1727996104779" duration="11669000" />
      <workItem from="1728077933270" duration="4434000" />
      <workItem from="1728142074726" duration="16040000" />
      <workItem from="1728189655165" duration="1752000" />
      <workItem from="1728203551066" duration="13960000" />
      <workItem from="1728228229146" duration="149000" />
      <workItem from="1728457717377" duration="7199000" />
      <workItem from="1728480250070" duration="352000" />
      <workItem from="1728506917034" duration="35358000" />
      <workItem from="1728890697352" duration="9537000" />
      <workItem from="1729022804465" duration="3170000" />
      <workItem from="1729110045075" duration="1137000" />
      <workItem from="1729433639904" duration="8101000" />
      <workItem from="1729487893633" duration="3248000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/PYTHON$Account_Test.coverage" NAME="Account_Test Coverage Results" MODIFIED="1727450012188" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/Account" />
    <SUITE FILE_PATH="coverage/PYTHON$inputValidation.coverage" NAME="inputValidation Coverage Results" MODIFIED="1727432012408" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/class_task/class_task" />
    <SUITE FILE_PATH="coverage/PYTHON$Assignment_One.coverage" NAME="Assignment_One Coverage Results" MODIFIED="1727443301931" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/elementary_concepts/chapter_two" />
    <SUITE FILE_PATH="coverage/PYTHON$area_of_circumferences.coverage" NAME="area_of_circumferences Coverage Results" MODIFIED="1727443321624" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/ajadi_taoreed_olawale" />
    <SUITE FILE_PATH="coverage/__init___py$.coverage" NAME=" Coverage Results" MODIFIED="1729490248429" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
    <SUITE FILE_PATH="coverage/PYTHON$multiplication_table_practice.coverage" NAME="multiplication_table_practice Coverage Results" MODIFIED="1727432073602" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/python_classwork" />
    <SUITE FILE_PATH="coverage/__init___py$exercise4.coverage" NAME="exercise4 Coverage Results" MODIFIED="1727989342625" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/pythonProject1" />
    <SUITE FILE_PATH="coverage/__init___py$Account_Test.coverage" NAME="Account_Test Coverage Results" MODIFIED="1727859849582" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/Account" />
    <SUITE FILE_PATH="coverage/__init___py$loan.coverage" NAME="loan Coverage Results" MODIFIED="1728225952078" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/loan_class" />
    <SUITE FILE_PATH="coverage/PYTHON$class_assessment.coverage" NAME="class_assessment Coverage Results" MODIFIED="1727432030594" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/class_task/class_task" />
    <SUITE FILE_PATH="coverage/__init___py$tv.coverage" NAME="tv Coverage Results" MODIFIED="1727957332015" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/television" />
    <SUITE FILE_PATH="coverage/__init___py$meals_test.coverage" NAME="meals_test Coverage Results" MODIFIED="1729434799221" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/meal_burger/meal_burger_test" />
    <SUITE FILE_PATH="coverage/__init___py$exercise3.coverage" NAME="exercise3 Coverage Results" MODIFIED="1727989317331" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/pythonProject1" />
    <SUITE FILE_PATH="coverage/__init___py$Exercise_no_8.coverage" NAME="Exercise_no_8 Coverage Results" MODIFIED="1727955517436" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/elementary_concepts/chpater_three" />
    <SUITE FILE_PATH="coverage/PYTHON$randominput.coverage" NAME="randominput Coverage Results" MODIFIED="1727432106643" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice/python_project/python_classwork" />
  </component>
</project>